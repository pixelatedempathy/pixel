---
// Enhanced professional header with sophisticated design
const navLinks = [
  { name: 'Experience Demos', href: '/demo-hub' },
  { name: 'Capabilities', href: '/features' },
  { name: 'About', href: '/about' },
  { name: 'Partnership', href: '/contact' },
];
---

<header class="sticky top-0 z-50 w-full backdrop-blur-lg bg-charcoal-950/95 border-b border-healing-400/20 shadow-professional">
  <div class="max-w-7xl mx-auto px-6">
    <div class="flex items-center justify-between h-20">
      <!-- Enhanced Site Branding -->
      <div class="flex items-center">
        <a class="flex items-center gap-4 hover:opacity-90 transition-all duration-300 ease-professional" href="/">
          <div class="relative">
            <div class="absolute inset-0 bg-healing-400/20 rounded-lg blur-sm"></div>
            <img
              src="/favicon.svg"
              alt="Pixelated Empathy Logo"
              class="relative w-10 h-10 flex-shrink-0 rounded-lg"
            />
          </div>
          <div class="flex flex-col">
            <span class="text-xl font-extrabold text-white font-geist tracking-tight whitespace-nowrap">
              Pixelated Empathy
            </span>
            <span class="text-xs font-medium text-healing-400/80 tracking-wide">
              Elite Therapy Training
            </span>
          </div>
        </a>
      </div>

      <!-- Enhanced Desktop Navigation -->
      <nav class="hidden lg:flex items-center ml-auto">
        <ul class="flex items-center space-x-8">
          {navLinks.map(link => (
            <li>
              <a
                href={link.href}
                class="text-sm font-semibold text-healing-200/90 hover:text-healing-400 transition-all duration-300 ease-professional font-geist px-3 py-2 rounded-professional hover:bg-healing-500/10 relative group"
              >
                {link.name}
                <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-healing-400 transition-all duration-300 group-hover:w-full"></span>
              </a>
            </li>
          ))}
        </ul>

        <!-- Professional Action Button -->
        <div class="ml-8 flex items-center">
          <a
            href="/contact"
            class="px-6 py-3 bg-gradient-to-r from-healing-500 to-healing-600 hover:from-healing-400 hover:to-healing-500 text-white font-bold text-sm rounded-professional transition-all duration-300 ease-professional transform hover:scale-105 shadow-professional hover:shadow-healing"
          >
            Schedule Partnership
          </a>
        </div>
      </nav>

      <!-- Enhanced Mobile Menu Button -->
      <div class="lg:hidden">
        <button
          id="mobile-menu-button"
          class="p-3 text-healing-300 hover:text-healing-400 hover:bg-healing-500/10 rounded-professional transition-all duration-300 ease-professional"
          aria-label="Toggle mobile menu"
          aria-expanded="false"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Enhanced Mobile Menu -->
  <div id="mobile-menu" class="hidden lg:hidden bg-charcoal-950/98 backdrop-blur-lg border-b border-healing-400/20">
    <div class="px-6 py-6 space-y-3">
      {navLinks.map(link => (
        <a
          href={link.href}
          class="block px-4 py-3 text-base font-semibold text-healing-200/90 hover:text-healing-400 hover:bg-healing-500/10 rounded-professional transition-all duration-300 ease-professional font-geist"
        >
          {link.name}
        </a>
      ))}
      <div class="pt-4 border-t border-healing-400/20">
        <a
          href="/contact"
          class="block px-4 py-3 bg-gradient-to-r from-healing-500 to-healing-600 hover:from-healing-400 hover:to-healing-500 text-white font-bold text-center rounded-professional transition-all duration-300 ease-professional"
        >
          Schedule Partnership
        </a>
      </div>
    </div>
  </div>
</header>

<script is:inline>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  const html = document.documentElement;

  const applyTheme = (theme) => {
    if (theme === 'dark') {
      html.classList.add('dark');
    } else {
      html.classList.remove('dark');
    }
  };

  if (themeToggle) {
    themeToggle.addEventListener('click', () => {
      const isDark = html.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'light' : 'dark');
      applyTheme(isDark ? 'light' : 'dark');
    });
  }

  // Apply theme on initial load
  const savedTheme = localStorage.getItem('theme') || 'dark';
  applyTheme(savedTheme);

  // Mobile menu functionality
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      const isOpen = !mobileMenu.classList.contains('hidden');

      if (isOpen) {
        mobileMenu.classList.add('hidden');
        mobileMenuButton.setAttribute('aria-expanded', 'false');
      } else {
        mobileMenu.classList.remove('hidden');
        mobileMenuButton.setAttribute('aria-expanded', 'true');
      }
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!mobileMenuButton.contains(e.target) && !mobileMenu.contains(e.target)) {
        mobileMenu.classList.add('hidden');
        mobileMenuButton.setAttribute('aria-expanded', 'false');
      }
    });
  }
</script>
